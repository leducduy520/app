name: Test build project
on:
  push:
    branches: ["main", "dev_node"]
jobs:
  Build-Project:
    runs-on: ubuntu-latest
    container:
      image: duyleduc520/module_app:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Restore Build Cache
        uses: actions/cache@v3
        with:
          path: build/ # Cache the build directory
          key: build-${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            build-${{ runner.os }}-
            build-
      - name: Configurations
        run: cmake --preset=linux-rel --fresh
      - name: Build
        run: cmake --build build --target install
      - name: Do Testing
        continue-on-error: true
        env:
          MONGODB_URI: mongodb://root:example@mongo:27017/
          MONGODB_NAME: app
          MONGODB_COLL: module_app
          API_BASE_URI: http://apiservice:3000
        run: ./install/bin/api-test
      - name: Cache Build Artifacts
        uses: actions/cache@v3
        with:
          path: build
          key: build-${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-module_app
          path: install
    services:
      mongo:
        image: mongo:latest
        ports:
          - 127.0.0.1:27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
      apiservice:
        image: duyleduc520/apiservice:latest
        ports:
          - 127.0.0.1:3000:3000
        env:
          MONGODB_URI: mongodb://root:example@mongo:27017/
          MONGODB_NAME: app
          MONGODB_COLL: module_app
  Test-Project:
    needs: Build-Project
    runs-on: ubuntu-latest
    steps:
      - name: dump step
        run: |
          pwd

      
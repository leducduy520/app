message(STATUS "Include Sanitizer")

function(target_add_sanitizer TARGET ADDR UNDEF LEAK THREAD)
    if(THIS_COMPILER_CLANG OR THIS_COMPILER_GCC)
        target_compile_options(${TARGET} PUBLIC "-fno-omit-frame-pointer")
        target_link_options(${TARGET} PUBLIC "-fno-omit-frame-pointer")

        if(ADDR)
            message(STATUS "Activating Address Sanitizer For ${TARGET}")
            target_compile_options(${TARGET} PUBLIC "-fsanitize=address")
            target_link_options(${TARGET} PUBLIC "-fsanitize=address")
        endif()

        if(UNDEF)
            message(STATUS "Activating Undefined Sanitizer For ${TARGET}")
            target_compile_options(${TARGET} PUBLIC "-fsanitize=undefined")
            target_link_options(${TARGET} PUBLIC "-fsanitize=undefined")
        endif()

        if(LEAK)
            message(STATUS "Activating Leak Sanitizer For ${TARGET}")
            target_compile_options(${TARGET} PUBLIC "-fsanitize=leak")
            target_link_options(${TARGET} PUBLIC "-fsanitize=leak")
        endif()

        if(THREAD)
            if(ADDR OR LEAK)
                message(WARNING "thread does not work with: address and leak")
            endif()

            message(STATUS "Activating Thread Sanitizer For ${TARGET}")
            target_compile_options(${TARGET} PUBLIC "-fsanitize=thread")
            target_link_options(${TARGET} PUBLIC "-fsanitize=thread")
        endif()
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        if(ADDR)
            message(STATUS "Activating Address Sanitizer For ${TARGET}")
            target_compile_options(${TARGET} PUBLIC "/fsanitize=address")
        endif()

        if(UNDEF)
            message(STATUS "sanitize=undefined not avail. for MSVC")
        endif()

        if(LEAK)
            message(STATUS "sanitize=leak not avail. for MSVC")
        endif()

        if(THREAD)
            message(STATUS "sanitize=thread not avail. for MSVC")
        endif()
    else()
        message(WARNING "This sanitizer not supported in this environment")
        return()
    endif()
endfunction()

function(directory_add_sanitizer ADDR UNDEF LEAK THREAD)
    if(CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR CMAKE_CXX_COMPILER_ID MATCHES "GNU")
        add_compile_options("-fno-omit-frame-pointer")
        add_link_options("-fno-omit-frame-pointer")

        if(ADDR)
            message(STATUS "Activating Address Sanitizer")
            add_compile_options("-fsanitize=address")
            add_link_options("-fsanitize=address")
        endif()

        if(UNDEF)
            message(STATUS "Activating Undefined Sanitizer")
            add_compile_options("-fsanitize=undefined")
            add_link_options("-fsanitize=undefined")
        endif()

        if(LEAK)
            add_compile_options("-fsanitize=leak")
            add_link_options("-fsanitize=leak")
        endif()

        if(THREAD)
            if(ADDR OR LEAK)
                message(WARNING "thread does not work with: address and leak")
            endif()

            message(STATUS "Activating Thread Sanitizer")
            add_compile_options("-fsanitize=thread")
            add_link_options("-fsanitize=thread")
        endif()
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        if(ADDR)
            message(STATUS "Activating Address Sanitizer")
            add_compile_options("/fsanitize=address")
        endif()

        if(UNDEF)
            message(STATUS "sanitize=undefined not avail. for MSVC")
        endif()

        if(LEAK)
            message(STATUS "sanitize=leak not avail. for MSVC")
        endif()

        if(THREAD)
            message(STATUS "sanitize=thread not avail. for MSVC")
        endif()
    else()
        message(WARNING "This sanitizer not supported in this environment")
        return()
    endif()
endfunction(directory_add_sanitizer)
